package com.miui.bmap_activity;

import java.util.Iterator;
import java.util.List;
import java.util.Locale;

import mars.location05.MainActivity;
import mars.location05.R;
import mars.location05.MainActivity.GeocodingButtonListener;
import mars.location05.MainActivity.GeocodingTask;
import mars.location05.MainActivity.MyButtonListener;
import mars.location05.MainActivity.ReverseGeocodingButtonListener;
import mars.location05.MainActivity.TestLocationListener;
import android.location.Address;
import android.location.Geocoder;
import android.location.Location;
import android.location.LocationListener;
import android.location.LocationManager;
import android.net.Uri;
import android.os.AsyncTask;
import android.os.Bundle;

import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.view.Menu;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;


public class MainActivity extends Activity {
	/** Called when the activity is first created. */
	private Button geocodingButton;
	private Button reverseGeocodingButton;
	private Button myButton = null;
	@Override
	public void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.main);
		super.onCreate(savedInstanceState);
   
        setContentView(R.layout.main);

        myButton = (Button)findViewById(R.id.myButton);
        /*LocationManager locationManager = (LocationManager)MainActivity.this.getSystemService(Context.LOCATION_SERVICE);
        locationManager.requestLocationUpdates(LocationManager.GPS_PROVIDER, 0, 0, new TestLocationListener());*/
        myButton.setOnClickListener(new MyButtonListener());
		geocodingButton = (Button) findViewById(R.id.geocodingButtonId);
		geocodingButton.setOnClickListener(new GeocodingButtonListener());
		
		reverseGeocodingButton = (Button)findViewById(R.id.reverseGeocodingButtonId);
		reverseGeocodingButton.setOnClickListener(new ReverseGeocodingButtonListener());
	}
	class MyButtonListener implements OnClickListener{

		@Override
		public void onClick(View v) {
			
			
			Uri uri = Uri.parse("geo:"+getLongitude());
			Intent it = new Intent(Intent.ACTION_VIEW,uri);
			startActivity(it); 
		}

		private Object getLongitude() {
			// TODO Auto-generated method stub
			return null;
		}
    	
    }

	class ReverseGeocodingButtonListener implements OnClickListener {

		@Override
		public void onClick(View arg0) {
			// TODO Auto-generated method stub
			
		}
		
	}

	private class GeocodingButtonListener implements OnClickListener{

		@Override
		public void onClick(View v) {
			new GeocodingTask().execute(null);
			LocationManager locationManager = (LocationManager)MainActivity.this.getSystemService(Context.LOCATION_SERVICE);
	        locationManager.requestLocationUpdates(LocationManager.GPS_PROVIDER, 0, 0, new TestLocationListener());
		}
		
	}
	private class TestLocationListener implements LocationListener{

		@Override
		public void onLocationChanged(Location location) {
			// TODO Auto-generated method stub
			System.out.println(location.getLongitude());
			System.out.println(location.getLatitude());
		}

		@Override
		public void onProviderDisabled(String provider) {
			// TODO Auto-generated method stub
			
		}

		@Override
		public void onProviderEnabled(String provider) {
			// TODO Auto-generated method stub
			
		}

		@Override
		public void onStatusChanged(String provider, int status, Bundle extras) {
			// TODO Auto-generated method stub
			
		}
		
	}
	/*private class ReverseGeocodeTask extends AsyncTask<Integer, Integer, Integer> {

		@Override
		protected Integer doInBackground(Integer... params) {
			try {
				Geocoder geocoder = new Geocoder(MainActivity.this, Locale.US);
				List<Address> addresses = geocoder.getFromLocation(40.714224,
						-73.961452, 1);
				for (Iterator iterator = addresses.iterator(); iterator.hasNext();) {
					Address address = (Address) iterator.next();
					System.out.println(address);
				}
			} catch (Exception e) {
				e.printStackTrace();
			}
			return null;
		}
	}*/
	
	private class GeocodingTask extends AsyncTask<Integer, Integer, Integer>{

		protected Integer doInBackground(Integer... params) {
			try {
				Geocoder geocoder = new Geocoder(MainActivity.this, Locale.US);
				List<Address> addresses = geocoder.getFromLocation(40.714224,
						-73.961452, 1);
				for (Iterator iterator = addresses.iterator(); iterator.hasNext();) {
					Address address = (Address) iterator.next();
					System.out.println(address);
				}
			} catch (Exception e) {
				e.printStackTrace();
			}
			return null;
		}
		
	}

	public Object getLatitude() {
		// TODO Auto-generated method stub
		return null;
	}
}
public void onLocationChanged(Location location)
  {
		if (location != null) 
           {
 			double lat = location.getLatitude();
			double lng = location.getLongitude();
			
			TextView latText = (TextView) findViewById(R.id.latText);
			TextView lngText = (TextView) findViewById(R.id.lngText);
			String currentLocation = ""+lat ;
			String currentLocation1 = ""+ lng;	  
		    latText.setText(currentLocation);
		    lngText.setText(currentLocation1);
			p = new GeoPoint((int) lat * 1000000 , (int) lng * 1000000 );
			mc.animateTo(p);    £ý   