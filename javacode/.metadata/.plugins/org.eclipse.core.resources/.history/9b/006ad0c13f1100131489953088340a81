package bsptest.stability;

import java.io.BufferedReader;
import java.io.DataInputStream;
import java.io.File;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.Date;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;

import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.NodeList;
import org.xml.sax.SAXException;
import android.os.RemoteException;
import android.util.Log;
import android.widget.TextView;

import com.android.uiautomator.core.UiDevice;
import com.android.uiautomator.core.UiObject;
import com.android.uiautomator.core.UiObjectNotFoundException;
import com.android.uiautomator.core.UiScrollable;
import com.android.uiautomator.core.UiSelector;
import com.android.uiautomator.core.UiWatcher;
import com.android.uiautomator.testrunner.UiAutomatorTestCase;

class Protogenesis extends UiAutomatorTestCase implements IStability
{
	private int i;	
	private static final String ACTIVITY_TAG="bsptest";
	// 在XML中读取字符串
	private String ReadXmlString(String name) throws ParserConfigurationException, SAXException, IOException
	{
		DocumentBuilderFactory factory1 = DocumentBuilderFactory
	    	     .newInstance();
	    DocumentBuilder builder1 = factory1.newDocumentBuilder();
	    Document document1 = builder1.parse(new File("/sdcard/string.xml"));
	    Element rootElement1 = document1.getDocumentElement();
	    NodeList list_loop = rootElement1.getElementsByTagName(name);
	    Element element_loop = (Element) list_loop.item(0);
	    String newname= element_loop.getChildNodes().item(0).getNodeValue();
		
	    return newname;
	}
	// 在XML中读取int 类型的数�?
	private int ReadXmlInt(String name) throws ParserConfigurationException, SAXException, IOException
	{
		DocumentBuilderFactory factory1 = DocumentBuilderFactory
	    	     .newInstance();
	    DocumentBuilder builder1 = factory1.newDocumentBuilder();
	    Document document1 = builder1.parse(new File("/sdcard/string.xml"));
	    Element rootElement1 = document1.getDocumentElement();
	    NodeList list_loop = rootElement1.getElementsByTagName(name);
	    Element element_loop = (Element) list_loop.item(0);
	    String newname= element_loop.getChildNodes().item(0).getNodeValue();
	    int loop = Integer.parseInt(newname, 10);
		
	    return loop;
	}
	public void CallMotest() throws UiObjectNotFoundException, IOException, Exception, SAXException{
		for(i = 0; i < ReadXmlInt("loop");i++)
		{
			//预防在程序运行中出现的紧急窗�?
			CrashBug();
			Process startCall= Runtime.getRuntime().exec("am start -a android.intent.action.CALL -d tel:"+ReadXmlString("callNum"));
			UiObject MoreButton = new UiObject(new UiSelector().
		    		   className("android.widget.ToggleButton").index(0).instance(2));
			MoreButton.click();
			UiObject wait1App = new UiObject(new UiSelector().textContains("正在拨号"));
			wait1App.waitUntilGone((long) 60000.0);
			UiObject waitApp = new UiObject(new UiSelector().textContains("暂停通话"));

			if(waitApp.exists()&& waitApp.isEnabled())
			{
				Log.v(Android.ACTIVITY_TAG, "Modemtest CallMo Ok ------------"+i);
				if(ReadXmlInt("endcall") ==1)
				{
					sleep((long) ReadXmlInt("calltime"));
					UiObject endButton = new UiObject(new UiSelector().
				    		   className("android.widget.Button").index(1));
					if(endButton.exists()){
						endButton.click();
					}
				}else
				{
					sleep((long) ReadXmlInt("calltime"));
				}
				
	
			}else
			{
				UiObject endButton = new UiObject(new UiSelector().
			    		   className("android.widget.Button").index(1));
				if(endButton.exists()){
					endButton.click();
				}
				Log.v(Android.ACTIVITY_TAG, "Modemtest CallMo fail ------------"+i);
			}
			sleep((long) ReadXmlInt("looptime"));
	    
	
		}
	}

	public void SmsMoTest() throws UiObjectNotFoundException, IOException, Exception, SAXException{
		for(i = 0; i < ReadXmlInt("smsloop");i++)
		{
			CrashBug();
			Process startSms= Runtime.getRuntime().exec("am start -a android.intent.action.SENDTO -d sms:" + 
		                    ReadXmlString("smsNum") + " --es sms_body " + ReadXmlString("details"));
			sleep((long) 3000);
			UiObject SendButton = new UiObject(new UiSelector().
		    		   className("android.widget.Button").index(0).instance(1));
			UiObject SendButton1 = new UiObject(new UiSelector().
		    		   className("android.widget.Button").index(0).instance(3));
		    if (SendButton1.exists()) {
		    	SendButton1.click();
	        } else {
	        	SendButton.click();
	        }
		    sleep((long) 10000);
	    	int result1 = -1;
	    	String logcat;
	    	File logcatFile=new File("/sdcard/"+i+".txt");
			logcatFile.createNewFile();
	    	FileOutputStream outputLogcat=new FileOutputStream(logcatFile);
	    	while(result1 == -1)
	    	{
	    		Process getLogcat1 = Runtime.getRuntime().exec("logcat -b radio -t 10000");
	    		DataInputStream inputLogcat1 = new DataInputStream(getLogcat1.getInputStream());
				while ((logcat = inputLogcat1.readLine()) != null){
					outputLogcat.write(logcat.getBytes());				
				}
				BufferedReader bufferedReader1 = new BufferedReader(new FileReader(logcatFile));  
				String lineTXT1 ;
				lineTXT1 = bufferedReader1.readLine();
				String log1 = lineTXT1.toString().trim();
				result1=log1.indexOf("errorCode");
				sleep((long) 3000.0);
				Log.v(Android.ACTIVITY_TAG, "sms send ------------"+i);
				System.out.println(result1);
	    	}
	    	Process KillSms= Runtime.getRuntime().exec("am force-stop com.android.mms");
	    	sleep((long) 3000.0);
	    	Process clearLog= Runtime.getRuntime().exec("logcat -b radio -c");
	    	sleep((long) ReadXmlInt("smslooptime"));
	    
	
		}
	}
	
	@SuppressWarnings("deprecation")
	public void AirPlane() throws UiObjectNotFoundException, IOException, Exception, SAXException{
		Process startSetting = Runtime.getRuntime().exec("am start -n com.android.settings/.MiuiSettings");
		sleep((long) 2000.0);
		UiObject allsteView = new UiObject(new UiSelector().text("全部设置"));
		allsteView.clickAndWaitForNewWindow();
		sleep((long) 2000.0);
		for(i = 1 ; i <  ReadXmlInt("Airplaneloop")*2 ; i++){
		CrashBug();
    	  Process p = Runtime.getRuntime().exec("logcat -b radio -c");
    	  sleep((long) 1000.0);
    	  UiObject SendButton = new UiObject(new UiSelector().
	    		   className("android.widget.CheckBox").index(0).instance(0));
		SendButton.click();
  		sleep((long) 10000.0);
  		if(i%2 != 0)
  		{
  			int result1 = -1;
	    	String logcat;
	    	File logcatFile=new File("/sdcard/"+i+".txt");
			logcatFile.createNewFile();
	    	FileOutputStream outputLogcat=new FileOutputStream(logcatFile);
	    	while(result1 == -1)
	    	{
	    		Process getLogcat1 = Runtime.getRuntime().exec("logcat -b radio -t 10000");
	    		DataInputStream inputLogcat1 = new DataInputStream(getLogcat1.getInputStream());
				while ((logcat = inputLogcat1.readLine()) != null){
					outputLogcat.write(logcat.getBytes());				
				}
				BufferedReader bufferedReader1 = new BufferedReader(new FileReader(logcatFile));  
				String lineTXT1 ;
				lineTXT1 = bufferedReader1.readLine();
				String log1 = lineTXT1.toString().trim();
				result1=log1.indexOf("changed sending intent rule=3 showPlmn='false' plmn='null'");
				sleep((long) 2000.0);
	    	}
	    	Log.v(Android.ACTIVITY_TAG, "Open is successfully------------"+i/2);
	    	Process DeleteTxt = Runtime.getRuntime().exec("rm /sdcard/"+i+".txt");
	    	sleep((long) ReadXmlInt("Airplanelooptime"));

	    	
  		}
      else
      {
    	  int result1 = -1;
	    	String logcat;
	    	File logcatFile=new File("/sdcard/"+i+".txt");
			logcatFile.createNewFile();
	    	FileOutputStream outputLogcat=new FileOutputStream(logcatFile);
	    	while(result1 == -1)
	    	{
	    		Process getLogcat1 = Runtime.getRuntime().exec("logcat -b radio -t 10000");
	    		DataInputStream inputLogcat1 = new DataInputStream(getLogcat1.getInputStream());
				while ((logcat = inputLogcat1.readLine()) != null){
					outputLogcat.write(logcat.getBytes());				
				}
				BufferedReader bufferedReader1 = new BufferedReader(new FileReader(logcatFile));  
				String lineTXT1 ;
				lineTXT1 = bufferedReader1.readLine();
				String log1 = lineTXT1.toString().trim();
				result1=log1.indexOf("changed sending intent rule=1 showPlmn='false'");
				sleep((long) 2000.0);
	    	}
	    	Process DeleteTxt = Runtime.getRuntime().exec("rm /sdcard/"+i+".txt");
	    	Log.v(Android.ACTIVITY_TAG, "Close is successfully------------"+i/2);
	    	sleep((long) ReadXmlInt("Airplanelooptime"));
      }
		    
    	  
      }
	}
	
	@SuppressWarnings({  "unused", "deprecation" })
	public void DataChange() throws UiObjectNotFoundException, IOException, Exception, SAXException {
		Process runSetting = Runtime.getRuntime().exec("am start com.android.settings/.TestingSettings");
		sleep((long) 5000.0);
		UiObject allsteView = new UiObject(new UiSelector().text("手机信息"));
		allsteView.clickAndWaitForNewWindow();
		sleep((long) 5000.0);
		//程序�?��时需要先设置为TD only ，以后会加个判断
		for(int i = 1 ; i < ReadXmlInt("Dateloop")*2; i++)
		{
			Process mkdir = Runtime.getRuntime().exec("mkdir /sdcard/DateTest");
			UiScrollable appViews = new UiScrollable(new UiSelector().scrollable(true));
	  		appViews.scrollToEnd(2);
		    sleep((long) 20000);
		    if(i%2 != 0)
	  		{
		    	Process getLog1= Runtime.getRuntime().exec("logcat -b radio -c");
		  		 UiObject settingsApp = appViews.getChildByText(new UiSelector()
		         .className(android.widget.TextView.class.getName()), 
		         "TD-SCDMA only");
		  		settingsApp.click();
		  		UiObject add1App = new UiObject(new UiSelector()
		          .text("GSM only"));
		  		add1App.click();
		  		int result1 = -1;
		    	String logcat;
		    	File logcatFile=new File("/sdcard/"+i+".txt");
				logcatFile.createNewFile();
		    	FileOutputStream outputLogcat=new FileOutputStream(logcatFile);
		    	while(result1 == -1)
		    	{
		    		Process getLogcat1 = Runtime.getRuntime().exec("logcat -b radio -t 10000");
		    		DataInputStream inputLogcat1 = new DataInputStream(getLogcat1.getInputStream());
					while ((logcat = inputLogcat1.readLine()) != null){
						outputLogcat.write(logcat.getBytes());				
					}
					BufferedReader bufferedReader1 = new BufferedReader(new FileReader(logcatFile));  
					String lineTXT1 ;
					lineTXT1 = bufferedReader1.readLine();
					String log1 = lineTXT1.toString().trim();
					result1=log1.indexOf("changed sending intent rule=1 showPlmn='false'");
					sleep((long) 2000.0);
					System.out.println("xuejh--------------"+ i );
		    	}
		    	Process DeleteTxt = Runtime.getRuntime().exec("rm /sdcard/"+i+".txt");
		    	Log.v(Android.ACTIVITY_TAG, "Change GSM only is successfully------------"+(i+1)/2);
		    	sleep((long) ReadXmlInt("Datelooptime"));
    		}
		    else{
		    	Process getLog1= Runtime.getRuntime().exec("logcat -b radio -c");
		    	UiObject settingsApp = appViews.getChildByText(new UiSelector()
		         .className(android.widget.TextView.class.getName()), 
		         "GSM only");
		  		settingsApp.click();
		  		UiObject add1App = new UiObject(new UiSelector()
		          .text("TD-SCDMA only"));
		  		add1App.click();
		  		int result1 = -1;
		    	String logcat;
		    	File logcatFile=new File("/sdcard/"+i+".txt");
				logcatFile.createNewFile();
		    	FileOutputStream outputLogcat=new FileOutputStream(logcatFile);
		    	while(result1 == -1)
		    	{
		    		Process getLogcat1 = Runtime.getRuntime().exec("logcat -b radio -t 10000");
		    		DataInputStream inputLogcat1 = new DataInputStream(getLogcat1.getInputStream());
					while ((logcat = inputLogcat1.readLine()) != null){
						outputLogcat.write(logcat.getBytes());				
					}
					BufferedReader bufferedReader1 = new BufferedReader(new FileReader(logcatFile));  
					String lineTXT1 ;
					lineTXT1 = bufferedReader1.readLine();
					String log1 = lineTXT1.toString().trim();
					result1=log1.indexOf("changed sending intent rule=1 showPlmn='false'");
					sleep((long) 2000.0);
					System.out.println("xuejh--------------"+ i );
		    	}
		    	Process DeleteTxt = Runtime.getRuntime().exec("rm /sdcard/"+i+".txt");
		    	Log.v(Android.ACTIVITY_TAG, "Change TD only is successfully------------"+i/2);
		    	sleep((long) ReadXmlInt("Datelooptime"));
		    }
		}
	}
	
	public void CrashBug()
	{
		UiWatcher confirmDialogWatcher = new UiWatcher(){
			@Override
			public boolean checkForCondition() {
				UiObject okCancelDialog = new UiObject(new UiSelector().text("取消"));
				if(okCancelDialog.exists()){
					try {	
						Process p2 = Runtime.getRuntime().exec("screencap -p /sdcard/" + i + ".png");
						 sleep((long) 1000.0);
						okCancelDialog.click();
						 sleep((long) 1000.0);
						/*GetLog getLog = new GetLog();
						getLog.getBugreportLog();*/
					} catch (UiObjectNotFoundException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					} catch (IOException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
					
				}
				return false;
			}
			
		};
		
		UiDevice.getInstance().registerWatcher("UIWATCHER", confirmDialogWatcher);
		UiDevice.getInstance().runWatchers();
	}
	
	public void Alarm() throws UiObjectNotFoundException, IOException, RemoteException{
		for(int i = 1 ; i < 350 ; i++)
		{
			Process runSmsMo = Runtime.getRuntime().exec("am start com.android.deskclock/.DeskClockTabActivity");
			sleep((long) 5000.0);
			UiObject AlarmButton = new UiObject(new UiSelector()
	         .text("添加闹钟"));
			AlarmButton.clickAndWaitForNewWindow();
			SimpleDateFormat date1 = new SimpleDateFormat("ss");
			SimpleDateFormat date2 = new SimpleDateFormat("mm");
			int ss = Integer.parseInt(date1.format(new Date()), 10);
			int mm = Integer.parseInt(date2.format(new Date()), 10);
			int num = 60-ss;
			UiObject Set1Button = new UiObject(new UiSelector().
		    		   className("android.widget.Button").index(2).instance(2));
			UiObject Set2Button = new UiObject(new UiSelector().
		    		   className("android.widget.Button").index(2).instance(1));
			if(mm <= 59 && mm >= 56){
				Set2Button.click();
				for(int j = 0 ; j < 3 ; j++){
					Set1Button.click();
					
			}
			}else{
				for(int j = 0 ; j < 3 ; j++){
					Set1Button.click();
					/*sleep((long) 1000.0);*/
				}
			}
			
			UiObject OkButton = new UiObject(new UiSelector()
	         .text("确定"));
			OkButton.click();
			UiDevice.getInstance().pressHome();
			UiObject alarmAlert = new UiObject(new UiSelector().packageName("com.android.deskclock").
		    		   className("android.view.View").index(0));
			WaitFor(alarmAlert,(150+num));
			/*sleep((long) 10000.0);
			sleep((long) ((240+num)*1000));
			UiDevice.getInstance().sleep();
			sleep((long) ((240+num)*1000.0));*/
			sleep((long) 2000.0);
			Process p2 = Runtime.getRuntime().exec("screencap -p /sdcard/" + i + ".png");
			sleep((long) 3000.0);
			UiDevice.getInstance().swipe(215, 1717, 910, 1717, 10);
			sleep((long) 10000.0);
			Process closeGmae = Runtime.getRuntime().exec("am force-stop com.android.deskclock");
			sleep((long) 5000.0);
		
		}
	}

	
	public void WaitFor(UiObject uiObject,int tiemout) throws UiObjectNotFoundException, IOException{
		int i=0;
		while(!uiObject.exists() && (i < tiemout)){
			
			
				sleep((long) 1000.0);
				i++;
				Log.v(Android.ACTIVITY_TAG, "signal-------"+i);
		
		}
		Log.v(Android.ACTIVITY_TAG, "signalxxxxxxxx-------1");
	}
}
