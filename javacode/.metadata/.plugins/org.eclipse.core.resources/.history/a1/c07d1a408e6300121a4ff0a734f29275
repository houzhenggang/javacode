package mars.activity02;

import java.util.Date;

import android.app.Activity;
import android.app.AlertDialog;
import android.content.DialogInterface;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.graphics.Matrix;
import android.graphics.drawable.BitmapDrawable;
import android.os.Bundle;
import android.os.Handler;
import android.util.DisplayMetrics;
import android.util.Log;
import android.view.KeyEvent;
import android.view.LayoutInflater;
import android.view.Menu;
import android.view.MenuItem;
import android.view.MotionEvent;
import android.view.View;
import android.view.Window;
import android.view.WindowManager;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.TextView;

public class EX07_03 extends Activity
{
  private TextView mTextView01;
  private ImageView mImageView01;
  
  /* LayoutInflater物件作為新建AlertDialog之用 */
  private LayoutInflater mInflater01;
  
  /* 輸入解鎖的View */
  private View mView01;
  private EditText mEditText01,mEditText02;
  
  /* menu選項identifier，用以識別事件 */
  static final private int MENU_ABOUT = Menu.FIRST;
  static final private int MENU_EXIT = Menu.FIRST+1;
  private Handler mHandler01 = new Handler();
  private Handler mHandler02 = new Handler();
  private Handler mHandler03 = new Handler();
  private Handler mHandler04 = new Handler();
  /* 控制User靜止與否的Counter */
  private int intCounter1, intCounter2;
  /* 控制FadeIn與Fade Out的Counter */
  private int intCounter3, intCounter4;
  /* 控制循序替換背景圖ID的Counter  */
  private int intDrawable=0;
  /* 上一次User有動作的Time Stamp */
  private Date lastUpdateTime;
  /* 計算User共幾秒沒有動作 */
  private long timePeriod;
  /* 靜止超過n秒將自動進入螢幕保護 */
  private float fHoldStillSecond = (float) 0;
  private boolean bIfRunScreenSaver;
  private boolean bFadeFlagOut, bFadeFlagIn = false;
  private long intervalScreenSaver = 1000;
  private long intervalKeypadeSaver = 1000;
  private long intervalFade = 100;
  private int screenWidth, screenHeight;
  /* 每n秒置換圖片 */
  private int intSecondsToChange = 5;
  
  /* 設定Screen Saver需要用到的背景圖 */
  private static int[] screenDrawable = new int[]
  {
    R.drawable.screen1,
    R.drawable.screen2,
    R.drawable.screen3,
    R.drawable.screen4,
    R.drawable.screen5
  };
  
  /** Called when the activity is first created. */
  @Override
  public void onCreate(Bundle savedInstanceState)
  {
    super.onCreate(savedInstanceState);
    
    /* 必須在setContentView之前呼叫全螢幕顯示 */
    requestWindowFeature(Window.FEATURE_NO_TITLE);
    getWindow().setFlags
    (
      WindowManager.LayoutParams.FLAG_FULLSCREEN,
      WindowManager.LayoutParams.FLAG_FULLSCREEN
    );
    setContentView(R.layout.main);
    
    /* onCreate all Widget */
    mImageView01 = (ImageView)findViewById(R.id.myImageView1);
   
    
    /* 初始取得User觸碰手機的時間 */
    lastUpdateTime = new Date(System.currentTimeMillis());
    
    /* 初始化Layout上的Widget可見性 */  }
  
 
  
  /* 監控User沒有動作的執行緒 */
  private Runnable mTasks01 = new Runnable() 
  {
    public void run() 
    {
      intCounter1++;
      
          /* 啟動執行緒2 */
          mHandler02.postDelayed(mTasks02, intervalScreenSaver);
          
          /* Fade Out*/
          if(intCounter1%(intSecondsToChange)==0)
          {
            bFadeFlagOut=true;
            mHandler03.postDelayed(mTasks03, intervalFade);
          }
          else
          {
            /* 在Fade Out後立即Fade In */
            if(bFadeFlagOut==true)
            {
              bFadeFlagIn=true;
              mHandler04.postDelayed(mTasks04, intervalFade);
            }
            else
            {
              bFadeFlagIn=false;
              intCounter4 = 0;
              mHandler04.removeCallbacks(mTasks04);
            }
            intCounter3 = 0;
            bFadeFlagOut = false;
          }
          bIfRunScreenSaver = true;
        }
 
      
      
  };
  
  /* Screen Saver Runnable */
  private Runnable mTasks02 = new Runnable() 
  {
    public void run() 
    {
      
        intCounter2++;
        

        showScreenSaver();
        
        //Log.i("HIPPO", "Counter2:"+Integer.toString(intCounter2));
        mHandler02.postDelayed(mTasks02, intervalScreenSaver);
     
     
    } 
  