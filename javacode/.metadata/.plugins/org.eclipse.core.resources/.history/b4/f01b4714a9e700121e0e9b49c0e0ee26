package Bsptest;
import java.io.*;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.xml.parsers.ParserConfigurationException;
import org.xml.sax.SAXException;
import android.os.RemoteException; 

import com.android.uiautomator.core.UiDevice;
import com.android.uiautomator.core.UiObject;
import com.android.uiautomator.core.UiObjectNotFoundException;
import com.android.uiautomator.core.UiScrollable;
import com.android.uiautomator.core.UiSelector;
import com.android.uiautomator.testrunner.UiAutomatorTestCase;

public class Airplane extends UiAutomatorTestCase {  
	
	@SuppressWarnings("deprecation")
	public void testAirPlane() throws UiObjectNotFoundException, IOException, RemoteException{

		getUiDevice().pressHome();
		Process pc1 = Runtime.getRuntime().exec("am start -n com.android.settings/.Settings");
		sleep((long) 5000.0);
		UiScrollable appViews = new UiScrollable(new UiSelector()
         .scrollable(true));
		UiObject moreApp = appViews.getChildByText(new UiSelector()
         .className(android.widget.TextView.class.getName()), 
         "更多...");
		moreApp.click();
		sleep((long) 5000.0);
      for(int i = 1 ; i < 1000 ; i++){
    	  Process p = Runtime.getRuntime().exec("logcat -b radio -c");
    	  sleep((long) 1000.0);
    	  Process p1 = Runtime.getRuntime().exec("logcat -c");
    	  sleep((long) 1000.0);
    	  UiObject airPlaneApp = new UiObject(new UiSelector()
	         .text("飞行模式"));
  		airPlaneApp.click();
  		sleep((long) 10000.0);
  		if(i%2 != 0)
  		{
    	  	String logcat;
			File logcatFile=new File("/sdcard/open"+i+".txt");
			logcatFile.createNewFile();
			FileOutputStream outputLogcat=new FileOutputStream(logcatFile);
			Process getLogcat = Runtime.getRuntime().exec("logcat -b radio -t 1000");
			DataInputStream inputLogcat = new DataInputStream(getLogcat.getInputStream());
			while ((logcat = inputLogcat.readLine()) != null){
				outputLogcat.write(logcat.getBytes());				
			}
			BufferedReader bufferedReader = new BufferedReader(new FileReader(logcatFile));  
            String lineTXT ;
            lineTXT = bufferedReader.readLine();
            String log = lineTXT.toString().trim();
            int result=log.indexOf("AT+CFUN=0");
            if(result != -1)
            {
		    	System.out.println("Open Airplane successfully------->"+i);				    	
		    }
		    else
		    {
		    	System.out.println("Open Airplane fail------->"+i);
		    	String failnote = "Open Airplane fail_"+i;

		    }
  		}
      else
      {
    	  String logcat;
			File logcatFile=new File("/sdcard/Airplane/close"+i+".txt");
			logcatFile.createNewFile();
			FileOutputStream outputLogcat=new FileOutputStream(logcatFile);
			Process getLogcat = Runtime.getRuntime().exec("logcat -b radio -t 1000");
			DataInputStream inputLogcat = new DataInputStream(getLogcat.getInputStream());
			while ((logcat = inputLogcat.readLine()) != null){
				outputLogcat.write(logcat.getBytes());				
			}
			BufferedReader bufferedReader = new BufferedReader(new FileReader(logcatFile));  
          String lineTXT ;
          lineTXT = bufferedReader.readLine();
          String log = lineTXT.toString().trim();
          int result=log.indexOf("AT+CFUN=1");
          if(result != -1)
          {
		    	System.out.println("Close Airplane successfully------->"+i);
		    	UiObject airPlane1App = new UiObject(new UiSelector()
		         .text("取消"));
		    	if(airPlane1App.exists())
		    	{
		    		airPlane1App.click();	    		
		    	}
		    	sleep((long) 5000.0);
		    	
		    }
		    else
		    {
		    	System.out.println("Close Airplane fail------->"+i);
		    	String failnote = "Close Airplane fail_"+i;
		    	 UiObject airPlane1App = new UiObject(new UiSelector()
		         .text("取消"));
		    	if(airPlane1App.exists())
		    	{
		    		airPlane1App.click();	    		
		    	}
		    	sleep((long) 5000.0);

		    }
    	  
      }
      }
	}
	
}
