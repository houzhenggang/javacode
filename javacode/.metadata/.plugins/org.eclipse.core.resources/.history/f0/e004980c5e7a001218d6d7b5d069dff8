package com.bsptest;

import java.io.*;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.NodeList;
import org.xml.sax.SAXException;
import java.util.Date;
import java.text.SimpleDateFormat;
import android.os.RemoteException;
import com.android.uiautomator.core.UiObject;
import com.android.uiautomator.core.UiObjectNotFoundException;
import com.android.uiautomator.core.UiSelector;
import com.android.uiautomator.testrunner.UiAutomatorTestCase;


public class Calltest extends UiAutomatorTestCase {   
	@SuppressWarnings("unused")
	protected void setUp() throws UiObjectNotFoundException, RemoteException, IOException {
		getUiDevice().sleep();
	    sleep((long) 2000.0);
	    getUiDevice().wakeUp();
	    sleep((long) 1000.0);
	    //米2A解锁
	    Process r1 = Runtime.getRuntime().exec("sendevent /dev/input/event0 4 4 9");
	    Process r2 = Runtime.getRuntime().exec("sendevent /dev/input/event0 1 115 1");
	    Process r3 = Runtime.getRuntime().exec("sendevent /dev/input/event0 0 0 0");
	    Process r4 = Runtime.getRuntime().exec("sendevent /dev/input/event2 1 158 1");
	    Process r5 = Runtime.getRuntime().exec("sendevent /dev/input/event2 0 0 0");
	    Process r6 = Runtime.getRuntime().exec("sendevent /dev/input/event0 4 4 9");
	    Process r7 = Runtime.getRuntime().exec("sendevent /dev/input/event0 1 115 0");
	    Process r8 = Runtime.getRuntime().exec("sendevent /dev/input/event0 0 0 0");
	    Process r9 = Runtime.getRuntime().exec("sendevent /dev/input/event2 1 158 0");
	    Process r10 = Runtime.getRuntime().exec("sendevent /dev/input/event2 0 0 0");
	    //米2解锁
	    /*Process r1 = Runtime.getRuntime().exec("sendevent /dev/input/event5 1 115 1");
	    Process r2 = Runtime.getRuntime().exec("sendevent /dev/input/event5 0 0 0");
	    Process r3 = Runtime.getRuntime().exec("sendevent /dev/input/event0 1 158 1");
	    Process r4 = Runtime.getRuntime().exec("sendevent /dev/input/event0 0 0 0");
	    Process r5 = Runtime.getRuntime().exec("sendevent /dev/input/event5 1 115 0");
	    Process r6 = Runtime.getRuntime().exec("sendevent /dev/input/event5 0 0 0");
	    Process r7 = Runtime.getRuntime().exec("sendevent /dev/input/event0 1 158 0");
	    Process r8 = Runtime.getRuntime().exec("sendevent /dev/input/event0 0 0 0");*/
	    sleep((long) 2000.0);		
		}
	
	protected void tearDown() throws UiObjectNotFoundException, RemoteException, IOException { 
		getUiDevice().sleep();
	    sleep((long) 2000.0);
		}*/
		@SuppressWarnings({  "unused", "deprecation" })
	public void testA1() throws UiObjectNotFoundException, RemoteException, IOException, ParserConfigurationException, SAXException{
		File newFile1=new File("/sdcard/Music/fail_list.txt");
		newFile1.createNewFile();
		FileOutputStream fo=new FileOutputStream(newFile1);
		//读取XML配置文件
		DocumentBuilderFactory factory1 = DocumentBuilderFactory
	    	     .newInstance();
	    DocumentBuilder builder1 = factory1.newDocumentBuilder();
	    Document document1 = builder1.parse(new File("/sdcard/string.xml"));
	    Element rootElement1 = document1.getDocumentElement();
	    NodeList list2 = rootElement1.getElementsByTagName("loopnum");
	    Element element2 = (Element) list2.item(0);
	    String str6;
	    str6 = element2.getChildNodes().item(0).getNodeValue();
	    //将字符串转化成数值型
	    int loop = Integer.parseInt(str6, 10);
		for(int i = 0 ; i < loop ; i++){
		   DocumentBuilderFactory factory = DocumentBuilderFactory
		    	     .newInstance();
		    DocumentBuilder builder = factory.newDocumentBuilder();
		    Document document = builder.parse(new File("/sdcard/string.xml"));
		    Element rootElement = document.getDocumentElement();
		    NodeList list1 = rootElement.getElementsByTagName("callnum");
		    NodeList list = rootElement.getElementsByTagName("name");
		    Element element = (Element) list.item(0);
		    Element element1 = (Element) list1.item(0);
		    String str5;
		    str5 = element.getChildNodes().item(0).getNodeValue();
		    String str2;
		    str2= element1.getChildNodes().item(0).getNodeValue();
		    String str3;
		    str3 = "am start -a " + str5 + " -d " + str2;
		    /*str3 = "am start -a android.intent.action.CALL -d tel:10086";*/
			Process p1 = Runtime.getRuntime().exec(str3);
			/*sleep((long) 30000.0);
			String stra;
			Process p2 = Runtime.getRuntime().exec("dumpsys telephony.registry |busybox grep mCallState= ");
		    DataInputStream p4 = new DataInputStream(p2.getInputStream());
		    stra = p4.readLine();

			int result = p4.readLine().indexOf("  mCallState=2");
			if(result>=0){*/
		    sleep((long) 15000.0);
		    UiObject settingsValidation = new UiObject(new UiSelector()
	         .textContains("00:"));
	      if(settingsValidation.exists()){
	    	  System.out.println("successfully");
			/*UiObject callView = new UiObject(new UiSelector()
			 .description("挂断"));
			callView.clickAndWaitForNewWindow();*/
			System.out.println("call is successfully!");
			//mi 2 挂点建坐标
			sleep((long) 60000.0);
			getUiDevice().click(360,1191);
			sleep((long) 5000.0);
			getUiDevice().pressHome();
			}
			else{
				String str1 = new String();
				String fail= "call is fail " + i+ "\n";
				SimpleDateFormat df1 = new SimpleDateFormat("yyyyMMddHH:mm:ss");
				fo.write((df1.format(new Date())+"  \n"+fail+"  \n").getBytes());
				getUiDevice().click(360,1191);
				sleep((long) 10000.0);
				getUiDevice().pressHome();
				SimpleDateFormat df2 = new SimpleDateFormat("yyyy_MM_dd_HHmmss_");
				File newFile=new File("/sdcard/Music/(df2.format(new Date())" + i + ".txt");
				newFile.createNewFile();
				sleep((long) 1000.0);
				FileOutputStream fos=new FileOutputStream(newFile);
				Process p3 = Runtime.getRuntime().exec("logcat -t 1000");
				DataInputStream p5 = new DataInputStream(p3.getInputStream());
				while ((str1 = p5.readLine()) != null){
					fos.write((str1+"  \n").getBytes());
				}
				}    	
			}
		}
	public static void main(String args[]){ 
		junit.textui.TestRunner.run(Calltest.class);
	}
		}
