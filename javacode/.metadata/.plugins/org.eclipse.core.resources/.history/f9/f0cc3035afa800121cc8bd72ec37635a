package bsptest;

import java.io.DataInputStream;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import javax.xml.parsers.ParserConfigurationException;
import org.xml.sax.SAXException;
import android.os.RemoteException;
import com.android.uiautomator.core.UiObject;
import com.android.uiautomator.core.UiObjectNotFoundException;
import com.android.uiautomator.core.UiScrollable;
import com.android.uiautomator.core.UiSelector;
import com.android.uiautomator.testrunner.UiAutomatorTestCase;
/**
 * ����Ļ���Ϣ���ܡ� 
*@author Ѧ���ƣ�BspTest��
*@version 1.0 2012/12/19
* ����ѹ�����Ե�wifiģ��
*/
public class Wifi extends UiAutomatorTestCase {   	
	/**
	*�����ر��ֻ�wifi500�β���
	*@see #testA
	*���в���֮��������ʱѯ��
	*@param newFile1 ��case ʧ�ܵ��б�
	*@param str2 dat tel:10086
	*@param str1 act android.intent.action.CALL
	*@param str3 ������绰��10086
	*ִ�в���绰case
	*@exception java.lang.exceptionthrowwhenswitchis1
	*@see #setup
	*����getevent ���ֻ��ͽ�������
	*
	*/
	@SuppressWarnings({ "unused", "deprecation" })
		protected void setUp() throws UiObjectNotFoundException, RemoteException, IOException {
				
		    Process px1 = Runtime.getRuntime().exec("dumpsys wifi");
		    DataInputStream px2 = new DataInputStream(px1.getInputStream());
		    String strx1 = px2.readLine();
		    String strx2 = "Wi-Fi is enabled";
			if(strx1.equals(strx2))
			{
				Process pc1 = Runtime.getRuntime().exec("am start -n com.android.settings/.Settings");
				sleep((long) 1000.0);
				UiScrollable appViews = new UiScrollable(new UiSelector()
		         .scrollable(true));
		      UiObject wifiApp = appViews.getChildByText(new UiSelector()
		         .className(android.widget.TextView.class.getName()), 
		         "Wi-Fi");
		      if(wifiApp.exists())
		      {
		    	  wifiApp.click();
		      }
		      UiObject openButton = new UiObject(new UiSelector().
		    		   className("android.widget.Switch").index(1).instance(0));
		      if(openButton.exists())
		      {
		    	  openButton.click();
		      }
				System.out.println("Start run test!");
				getUiDevice().pressHome();
			}
			else
			{
				System.out.println("Start run test!");				
			}
			}
		protected void tearDown() throws UiObjectNotFoundException, RemoteException, IOException { 
			getUiDevice().sleep();
		    sleep((long) 2000.0);
			}
		
		@SuppressWarnings({ "unused", "deprecation" })
		public void test() throws UiObjectNotFoundException, RemoteException, IOException, ParserConfigurationException, SAXException{
			Process mkdir = Runtime.getRuntime().exec("mkdir /sdcard/Wifi");
			File newFile1=new File("/sdcard/MIUI/open_fail_list.text");
			newFile1.createNewFile();
			FileOutputStream fo=new FileOutputStream(newFile1);
			File newFile2=new File("/sdcard/MIUI/close_fail_list.text");
			newFile1.createNewFile();
			FileOutputStream fo1=new FileOutputStream(newFile2);
			File newFile3=new File("/sdcard/MIUI/Testresult.text");
			newFile3.createNewFile();
			FileOutputStream foq=new FileOutputStream(newFile1);
			/*DocumentBuilderFactory factory1 = DocumentBuilderFactory
		    	     .newInstance();
		    DocumentBuilder builder1 = factory1.newDocumentBuilder();
		    Document document1 = builder1.parse(new File("/sdcard/MIUI/string.xml"));
		    Element rootElement1 = document1.getDocumentElement();
		    NodeList list2 = rootElement1.getElementsByTagName("loopnum");
		    Element element2 = (Element) list2.item(0);
		    String str6;
		    str6 = element2.getChildNodes().item(0).getNodeValue();
		    int aa = Integer.parseInt(str6, 10);*/
			for(int i = 0 ; i < 500 ; i++){
				Process px1 = Runtime.getRuntime().exec("dumpsys wifi");
			    DataInputStream px2 = new DataInputStream(px1.getInputStream());
			    String strx1 = px2.readLine();
			    String strx2 = "Wi-Fi is enabled";
				if(strx1.equals(strx2))
				{
					Process pc1 = Runtime.getRuntime().exec("am start -n com.android.settings/.Settings");
					sleep((long) 1000.0);
					UiScrollable appViews = new UiScrollable(new UiSelector()
			         .scrollable(true));
			      UiObject wifiApp = appViews.getChildByText(new UiSelector()
			         .className(android.widget.TextView.class.getName()), 
			         "Wi-Fi");
			      if(wifiApp.exists())
			      {
			    	  wifiApp.click();
			      }
			      UiObject openButton = new UiObject(new UiSelector().
			    		   className("android.widget.Switch").index(1).instance(0));
			      if(openButton.exists())
			      {
			    	  openButton.click();
			      }
					System.out.println("Start run test!");
					getUiDevice().pressHome();
				}
				else
				{
					System.out.println("Start run test!");				
				}
				Process p1 = Runtime.getRuntime().exec("am start -n com.android.settings/.Settings");
				sleep((long) 1000.0);
				UiObject allsteView = new UiObject(new UiSelector().text("ȫ������"));
				allsteView.clickAndWaitForNewWindow();
				sleep((long) 1000.0);
				UiObject wifiView = new UiObject(new UiSelector().text("WLAN"));
				wifiView.clickAndWaitForNewWindow();				
				sleep((long) 2000.0);
				getUiDevice().click(633,100);
				sleep((long) 15000.0);
				String stra;
				Process p2 = Runtime.getRuntime().exec("dumpsys wifi |busybox grep curState= ");
			    DataInputStream p4 = new DataInputStream(p2.getInputStream());
			    stra = p4.readLine();
				String straa = "Wi-Fi is enabled";
				if(stra.equals(straa)){
					sleep((long) 2000.0);
					getUiDevice().pressHome();
					Process p3 = Runtime.getRuntime().exec("am start -n com.android.settings/.MiuiSettings");
					sleep((long) 3000.0);
					UiObject azllsteView = new UiObject(new UiSelector().text("ȫ������"));
					azllsteView.clickAndWaitForNewWindow();
					sleep((long) 2000.0);
					UiObject aallsteView = new UiObject(new UiSelector().text("WLAN"));
					aallsteView.clickAndWaitForNewWindow();				
					sleep((long) 2000.0);
					getUiDevice().click(633,100);
					sleep((long) 10000.0);
					String straaa;
					Process p11 = Runtime.getRuntime().exec("dumpsys wifi |busybox grep curState= ");
				    DataInputStream p12 = new DataInputStream(p11.getInputStream());
				    straaa = p12.readLine();
				    String stra1 = "curState=DriverUnloadedState";
					if(straaa.equals(stra1)){
						sleep((long) 2000.0);
						getUiDevice().pressHome();						
						}
					else{
						String str11 = new String();
						int j = 1;  j++;
						String fail= "call is fail " + i+ "\n";
						fo1.write((fail+"  \n").getBytes());
						sleep((long) 10000.0);
						getUiDevice().pressHome();
						File newFile=new File("/sdcard/MIUI/close_fail" + i + ".txt");
						newFile.createNewFile();
						FileOutputStream fo1s=new FileOutputStream(newFile);
						Process p21 = Runtime.getRuntime().exec("logcat -t 600");
						DataInputStream p5 = new DataInputStream(p3.getInputStream());
						while ((str11 = p5.readLine()) != null){
							fo1s.write((str11+"  \n").getBytes());
						}
						String f1= "�ر�ʧ�ܵĽ��Ϊ" + j+ "\n";
						foq.write((f1+"  \n").getBytes());
						}					
					}
				else{
					String str1 = new String();
					int k = 1; k++;
					String fail= "call is fail " + i+ "\n";
					fo.write((fail+"  \n").getBytes());
					sleep((long) 1000.0);
					getUiDevice().pressHome();
					File newFile=new File("/sdcard/MIUI/open_fail" + i + ".txt");
					newFile.createNewFile();
					FileOutputStream fos=new FileOutputStream(newFile);
					Process p3 = Runtime.getRuntime().exec("logcat -t 600");
					DataInputStream p5 = new DataInputStream(p3.getInputStream());
					while ((str1 = p5.readLine()) != null){
						fos.write((str1+"  \n").getBytes());
					}
					String f= "����ʧ�ܵĽ��Ϊ" + k+ "\n";
					foq.write((f+"  \n").getBytes());
					}   
				}

		}
	
		
}